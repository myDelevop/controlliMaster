
---------------------------------------------------------
UTENTE
---------------------------------------------------------

DROP TABLE UTENTE;

CREATE TABLE UTENTE(
ID NUMBER NOT NULL PRIMARY KEY,
ID_UTENTE NUMBER NOT NULL,
USERNAME VARCHAR2(20 CHAR) NOT NULL,
DOMINIO VARCHAR2(20 CHAR) NOT NULL,
NOME VARCHAR2(50 CHAR),
COGNOME VARCHAR2(50 CHAR),
EMAIL VARCHAR2(100 CHAR),
DATA_CREAZIONE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
USER_CREAZIONE VARCHAR2(20 CHAR) NOT NULL,
DATA_MODIFICA TIMESTAMP, 
USER_MODIFICA VARCHAR2(20 CHAR),
DATA_CANCELLAZIONE TIMESTAMP,
USER_CANCELLAZIONE VARCHAR2(20 CHAR),
FLAG_CANCELLATO NUMBER(1) NOT NULL,
FLAG_VALIDO NUMBER(1) NOT NULL
) NOLOGGING;

DROP SEQUENCE auto_inc_utente_seq;

CREATE SEQUENCE auto_inc_utente_seq;


CREATE OR REPLACE TRIGGER auto_inc_utente_insert
BEFORE INSERT ON UTENTE
FOR EACH ROW
BEGIN
 SELECT auto_inc_utente_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
GRUPPO
---------------------------------------------------------

DROP TABLE GRUPPO;

CREATE TABLE GRUPPO(
ID NUMBER NOT NULL PRIMARY KEY,
ID_GRUPPO NUMBER NOT NULL,
NOME_GRUPPO VARCHAR2(50 CHAR),
DESCRIZIONE_GRUPPO_IT VARCHAR2(50 CHAR),
DESCRIZIONE_GRUPPO_DE VARCHAR2(50 CHAR),
DATA_CREAZIONE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
USER_CREAZIONE VARCHAR2(20 CHAR) NOT NULL,
DATA_MODIFICA TIMESTAMP, 
USER_MODIFICA VARCHAR2(20 CHAR),
DATA_CANCELLAZIONE TIMESTAMP,
USER_CANCELLAZIONE VARCHAR2(20 CHAR),
FLAG_CANCELLATO NUMBER(1) NOT NULL,
FLAG_VALIDO NUMBER(1) NOT NULL) NOLOGGING;

DROP SEQUENCE auto_inc_gruppo_seq;

CREATE SEQUENCE auto_inc_gruppo_seq;


CREATE OR REPLACE TRIGGER auto_inc_gruppo_insert
BEFORE INSERT ON GRUPPO
FOR EACH ROW
BEGIN
 SELECT auto_inc_gruppo_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
UTENTE_GRUPPO
---------------------------------------------------------

DROP TABLE UTENTE_GRUPPO;

CREATE TABLE UTENTE_GRUPPO (
ID NUMBER NOT NULL PRIMARY KEY,
ID_REL NUMBER NOT NULL,
ID_UTENTE NUMBER NOT NULL,
ID_GRUPPO NUMBER NOT NULL,
DATA_CREAZIONE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
USER_CREAZIONE VARCHAR2(20 CHAR) NOT NULL,
DATA_MODIFICA TIMESTAMP, 
USER_MODIFICA VARCHAR2(20 CHAR),
DATA_CANCELLAZIONE TIMESTAMP,
USER_CANCELLAZIONE VARCHAR2(20 CHAR),
FLAG_CANCELLATO NUMBER(1) NOT NULL,
FLAG_VALIDO NUMBER(1) NOT NULL) NOLOGGING;

DROP SEQUENCE auto_inc_utenteGruppo_seq;

CREATE SEQUENCE auto_inc_utenteGruppo_seq;


CREATE OR REPLACE TRIGGER auto_inc_utenteGruppo_insert
BEFORE INSERT ON UTENTE_GRUPPO
FOR EACH ROW
BEGIN
 SELECT auto_inc_utenteGruppo_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
GRUPPO_GRUPPO
---------------------------------------------------------

DROP TABLE GRUPPO_GRUPPO;

CREATE TABLE GRUPPO_GRUPPO (
ID NUMBER NOT NULL PRIMARY KEY,
ID_REL NUMBER NOT NULL,
ID_GRUPPO_PARENT NUMBER NOT NULL,
ID_GRUPPO_CHILD NUMBER NOT NULL,
DATA_CREAZIONE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
USER_CREAZIONE VARCHAR2(20 CHAR) NOT NULL,
DATA_MODIFICA TIMESTAMP, 
USER_MODIFICA VARCHAR2(20 CHAR),
DATA_CANCELLAZIONE TIMESTAMP,
USER_CANCELLAZIONE VARCHAR2(20 CHAR),
FLAG_CANCELLATO NUMBER(1) NOT NULL,
FLAG_VALIDO NUMBER(1) NOT NULL, 
NOTE VARCHAR2(500 CHAR)
) NOLOGGING;

DROP SEQUENCE auto_inc_gruppoGruppo_seq;

CREATE SEQUENCE auto_inc_gruppoGruppo_seq;

CREATE OR REPLACE TRIGGER auto_inc_gruppoGruppo_insert
BEFORE INSERT ON GRUPPO_GRUPPO
FOR EACH ROW
BEGIN
 SELECT auto_inc_gruppoGruppo_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
STAZIONE_FORESTALE
---------------------------------------------------------

DROP TABLE "STAZIONE_FORESTALE";

CREATE TABLE "STAZIONE_FORESTALE" (
"ID" NUMBER NOT NULL PRIMARY KEY,
"ID_STAZIONE_FORESTALE" NUMBER NOT NULL,
"NUMERO" VARCHAR2(20 CHAR),
"ISPETTORATO_FORESTALE_IT" VARCHAR2(100 CHAR),
"ISPETTORATO_FORESTALE_DE" VARCHAR2(100 CHAR),
"NOME" VARCHAR2(100 CHAR),
"DESCR_IT" VARCHAR2(500 CHAR),
"DESCR_DE" VARCHAR2(500 CHAR),
"ANNO_VALIDITA_INIZIO" NUMBER,
"ANNO_VALIDITA_FINE" NUMBER,
"NOTE" VARCHAR2(500 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL, 
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "STAZIONE_FORESTALE"
IS 'Anagrafica della stazione forestale';

DROP SEQUENCE auto_inc_staz_for_seq;

CREATE SEQUENCE auto_inc_staz_for_seq;

CREATE OR REPLACE TRIGGER auto_inc_staz_for_insert
BEFORE INSERT ON STAZIONE_FORESTALE
FOR EACH ROW
BEGIN
 SELECT auto_inc_staz_for_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
CONTROLLORE
---------------------------------------------------------

DROP TABLE "CONTROLLORE";

CREATE TABLE "CONTROLLORE" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_CONTROLLORE" NUMBER NOT NULL,
"USERNAME" VARCHAR2(20 CHAR), 
"NOME" VARCHAR2(50 CHAR),
"COGNOME" VARCHAR2(50 CHAR),
"ANNO_VALIDITA_INIZIO" NUMBER,
"ANNO_VALIDITA_FINE" NUMBER,
"NOTE" VARCHAR2(500 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "CONTROLLORE"
IS 'Anagrafica del controllore';


DROP SEQUENCE auto_inc_contr_seq;

CREATE SEQUENCE auto_inc_contr_seq;

CREATE OR REPLACE TRIGGER auto_inc_contr_insert
BEFORE INSERT ON CONTROLLORE
FOR EACH ROW
BEGIN
 SELECT auto_inc_contr_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
DWH_AZIENDA
---------------------------------------------------------

DROP TABLE "DWH_AZIENDA";

CREATE TABLE "DWH_AZIENDA" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_AZIENDA" NUMBER NOT NULL,
"CAMPAGNA" NUMBER NOT NULL,
"CUAA" VARCHAR2(20 CHAR),
"RAGIONE_SOCIALE" VARCHAR2(500 CHAR),
"NOME_COGNOME" VARCHAR2(500 CHAR),
"INDIRIZZO" VARCHAR2(500 CHAR),
"CAP" NUMBER,
"COMUNE" VARCHAR2(500 CHAR),
"LOCALITA" VARCHAR2(500 CHAR),
"LINGUA_PREFERITA_COD" VARCHAR2(10 CHAR),
"LINGUA_PREFERITA_DESCR_IT" VARCHAR2(20 CHAR),
"LINGUA_PREFERITA_DESCR_DE" VARCHAR2(20 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "DWH_AZIENDA"
IS 'Anagrafica azienda';


DROP SEQUENCE auto_inc_azienda_seq;

CREATE SEQUENCE auto_inc_azienda_seq;

CREATE OR REPLACE TRIGGER auto_inc_azienda_insert
BEFORE INSERT ON DWH_AZIENDA
FOR EACH ROW
BEGIN
 SELECT auto_inc_azienda_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
AZIENDA_STAZ_FOR
---------------------------------------------------------

DROP TABLE "AZIENDA_STAZ_FOR";

CREATE TABLE "AZIENDA_STAZ_FOR" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_AZI_STAZ_FOR" NUMBER NOT NULL,
"CUAA" VARCHAR2(20 CHAR),
"ID_AZIENDA" NUMBER NOT NULL,
"ID_STAZIONE_FORESTALE" NUMBER NOT NULL,
"CAMPAGNA" NUMBER,
"NOTE" VARCHAR2(500 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "AZIENDA_STAZ_FOR"
IS 'Tabella di relazione tra azienda e stazione forestale';

-- CHIAVE  [ANNO_CAMPAGNA, ID_AZIENDA, ID_STAZIONE_FORESTALE]


DROP SEQUENCE auto_inc_azi_staz_for_seq;

CREATE SEQUENCE auto_inc_azi_staz_for_seq;

CREATE OR REPLACE TRIGGER auto_inc_azi_staz_for_insert
BEFORE INSERT ON AZIENDA_STAZ_FOR
FOR EACH ROW
BEGIN
 SELECT auto_inc_azi_staz_for_seq.nextval
 INTO :new.id
 FROM dual;
END;



---------------------------------------------------------
CONTROLLORE_STAZ_FOR
---------------------------------------------------------

DROP TABLE "CONTROLLORE_STAZ_FOR";

CREATE TABLE "CONTROLLORE_STAZ_FOR" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_CONTR_STAZ_FOR" NUMBER NOT NULL,
"ID_CONTROLLORE" NUMBER NOT NULL,
"ID_STAZIONE_FORESTALE" NUMBER NOT NULL,
"ANNO_VALIDITA_INIZIO" NUMBER,
"ANNO_VALIDITA_FINE" NUMBER,
"NOTE" VARCHAR2(500 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "CONTROLLORE_STAZ_FOR"
IS 'Tabella di relazione tra controllore e stazione forestale';


DROP SEQUENCE auto_inc_contr_staz_for_seq;

CREATE SEQUENCE auto_inc_contr_staz_for_seq;

CREATE OR REPLACE TRIGGER auto_inc_contr_staz_for_insert
BEFORE INSERT ON CONTROLLORE_STAZ_FOR
FOR EACH ROW
BEGIN
 SELECT auto_inc_contr_staz_for_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
AZIENDA_STAZ_FOR_CONTROLLORE
---------------------------------------------------------

DROP TABLE "AZIENDA_STAZ_FOR_CONTROLLORE";

CREATE TABLE "AZIENDA_STAZ_FOR_CONTROLLORE" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_AZI_STAZ_FOR_CONTR" NUMBER NOT NULL,
"ID_AZI_STAZ_FOR" NUMBER NOT NULL,
"ID_CONTR_STAZ_FOR" NUMBER NOT NULL,
"ANNO_CAMPAGNA" NUMBER NOT NULL,
"NOTE" VARCHAR2(500 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "AZIENDA_STAZ_FOR_CONTROLLORE"
IS 'Tabella di relazione tra azienda, controllore e stazione forestale';

DROP SEQUENCE auto_inc_azi_contr_staz_seq;

CREATE SEQUENCE auto_inc_azi_contr_staz_seq;

CREATE OR REPLACE TRIGGER auto_inc_azi_contr_staz_insert
BEFORE INSERT ON AZIENDA_STAZ_FOR_CONTROLLORE
FOR EACH ROW
BEGIN
 SELECT auto_inc_azi_contr_staz_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
CONTROLLO
---------------------------------------------------------

DROP TABLE "CONTROLLO";

CREATE TABLE "CONTROLLO" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_CONTROLLO" NUMBER NOT NULL,
"ANNO" NUMBER NOT NULL,
"CAMPAGNA" NUMBER NOT NULL,
"DESCR_IT" VARCHAR2(500 CHAR),
"DESCR_DE" VARCHAR2(500 CHAR),
"NOTE" VARCHAR2(500 CHAR),
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "CONTROLLO"
IS 'Tabella di anagrafica del controllo per cui si generano i verbali';

DROP SEQUENCE auto_inc_controllo_seq;

CREATE SEQUENCE auto_inc_controllo_seq;

CREATE OR REPLACE TRIGGER auto_inc_controllo_insert
BEFORE INSERT ON CONTROLLO
FOR EACH ROW
BEGIN
 SELECT auto_inc_controllo_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
CHECKLIST_TEMPLATE
---------------------------------------------------------

DROP TABLE "CHECKLIST_TEMPLATE";

CREATE TABLE "CHECKLIST_TEMPLATE" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_CHECKLIST_TEMPLATE" NUMBER NOT NULL,
"ID_CONTROLLO" NUMBER NOT NULL,
"ANNO" NUMBER NOT NULL,
"CAMPAGNA" NUMBER NOT NULL,
"NOME_IT" VARCHAR2(200 CHAR),
"NOME_DE" VARCHAR2(200 CHAR),
"DESCR_IT" VARCHAR2(200 CHAR),
"DESCR_DE" VARCHAR2(200 CHAR),
"TIPO_MODELLO_IT" VARCHAR2(200 CHAR), 
"TIPO_MODELLO_DE" VARCHAR2(200 CHAR), 
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "CHECKLIST_TEMPLATE"
IS 'Tabella di gestione del template delle checklist';

DROP SEQUENCE auto_inc_check_template_seq;

CREATE SEQUENCE auto_inc_check_template_seq;

CREATE OR REPLACE TRIGGER auto_inc_check_template_insert
BEFORE INSERT ON CHECKLIST_TEMPLATE
FOR EACH ROW
BEGIN
 SELECT auto_inc_check_template_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
CHECKLIST_REGOLE
---------------------------------------------------------

DROP TABLE "CHECKLIST_REGOLE";

CREATE TABLE "CHECKLIST_REGOLE" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_CHECKLIST_GRUPPO_REGOLE" NUMBER NOT NULL,
"ID_CHECKLIST_REGOLA" NUMBER NOT NULL,
"ID_CONTROLLO" NUMBER NOT NULL,
"ANNO" NUMBER NOT NULL,
"CAMPAGNA" NUMBER NOT NULL,
"MISURA" VARCHAR2(10 CHAR),
"INTERVENTO" VARCHAR2(10 CHAR),
"SOTTOINTERVENTO" VARCHAR2(10 CHAR),
"TIPO_CAMPIONE" VARCHAR2(20 CHAR),
"TIPO_CONTROLLO" VARCHAR2(20 CHAR),
"ID_CHECKLIST_TEMPLATE" NUMBER NOT NULL,
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL, 
"NOTE" VARCHAR2(500 CHAR)
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "CHECKLIST_REGOLE"
IS 'Tabella di gestione delle regole di generazione delle checklist';

DROP SEQUENCE auto_inc_check_regole_seq;

CREATE SEQUENCE auto_inc_check_regole_seq;

CREATE OR REPLACE TRIGGER auto_inc_check_regole_insert
BEFORE INSERT ON CHECKLIST_REGOLE
FOR EACH ROW
BEGIN
 SELECT auto_inc_check_regole_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
APP_SETTINGS
---------------------------------------------------------

DROP TABLE OPP_CTR_ADM_USER."APP_SETTINGS";

CREATE TABLE OPP_CTR_ADM_USER."APP_SETTINGS" (
"KEY" VARCHAR2(50 CHAR) NOT NULL PRIMARY KEY, 
"VALUE" VARCHAR2(500 CHAR) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE OPP_CTR_ADM_USER."APP_SETTINGS"
IS 'Tabella di gestione delle impostazioni dell applicazione';

---------------------------------------------------------
APP_ANAGRAFICA
---------------------------------------------------------

DROP TABLE "APP_ANAGRAFICA";

CREATE TABLE "APP_ANAGRAFICA" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_ANAGRAFICA" NUMBER NOT NULL, 
"CHIAVE" VARCHAR2(200 CHAR),
"VALORE_IT" VARCHAR2(200 CHAR),
"VALORE_DE" VARCHAR2(200 CHAR),
"ANNO_VALIDITA_INIZIO" NUMBER NOT NULL,
"ANNO_VALIDITA_FINE" NUMBER NOT NULL,
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "APP_ANAGRAFICA"
IS 'Tabella di gestione delle descrizioni di anagrafica che saranno visibili nelle tendine nella GUI';

DROP SEQUENCE auto_inc_app_anagrafica_seq;

CREATE SEQUENCE auto_inc_app_anagrafica_seq;

CREATE OR REPLACE TRIGGER auto_inc_app_anagrafica_insert
BEFORE INSERT ON APP_ANAGRAFICA
FOR EACH ROW
BEGIN
 SELECT auto_inc_app_anagrafica_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
VERBALE
---------------------------------------------------------

DROP TABLE "VERBALE";

CREATE TABLE "VERBALE" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_VERBALE" NUMBER NOT NULL,
"ID_CONTROLLO" NUMBER NOT NULL,
"ANNO" NUMBER NOT NULL,
"CAMPAGNA" NUMBER NOT NULL,
"CUAA" VARCHAR2(20 CHAR),
"STATO" VARCHAR2(30 CHAR),
"ID_CHECKLIST_GRUPPO_REGOLE" NUMBER NOT NULL,
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL, 
"NOTE" VARCHAR2(500 CHAR)
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "VERBALE"
IS 'Tabella che rappresenta il verbale';

DROP SEQUENCE auto_inc_verbale_seq;

CREATE SEQUENCE auto_inc_verbale_seq;

CREATE OR REPLACE TRIGGER auto_inc_verbale_insert
BEFORE INSERT ON VERBALE
FOR EACH ROW
BEGIN
 SELECT auto_inc_verbale_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
SYS_LOG
---------------------------------------------------------

DROP TABLE "SYS_LOG";

CREATE TABLE "SYS_LOG" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"UTENTE" VARCHAR2(20 CHAR),
"DATA" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"TIPO_OPERAZIONE" VARCHAR2(50 CHAR),
"DESCRIZIONE" VARCHAR2(200 CHAR)
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "SYS_LOG"
IS 'Tabella che permette di tracciare i log applicativi';

DROP SEQUENCE auto_inc_sys_log_seq;

CREATE SEQUENCE auto_inc_sys_log_seq;

CREATE OR REPLACE TRIGGER auto_inc_sys_log_insert
BEFORE INSERT ON SYS_LOG
FOR EACH ROW
BEGIN
 SELECT auto_inc_sys_log_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
STAZIONE_FORESTALE_MAPPING
---------------------------------------------------------

DROP TABLE STAZIONE_FORESTALE_MAPPING;

CREATE TABLE STAZIONE_FORESTALE_MAPPING(
ID NUMBER NOT NULL PRIMARY KEY,
ID_MAPPING NUMBER NOT NULL,
COMUNE_IT VARCHAR2(50 CHAR) NOT NULL,
COMUNE_DE VARCHAR2(50 CHAR) NOT NULL,
STAZIONE_FORESTALE VARCHAR2(50 CHAR),
STAZIONE_FORESTALE_IT VARCHAR2(100 CHAR),
STAZIONE_FORESTALE_DE VARCHAR2(100 CHAR),
DATA_CREAZIONE TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
USER_CREAZIONE VARCHAR2(20 CHAR) NOT NULL,
DATA_MODIFICA TIMESTAMP, 
USER_MODIFICA VARCHAR2(20 CHAR),
DATA_CANCELLAZIONE TIMESTAMP,
USER_CANCELLAZIONE VARCHAR2(20 CHAR),
FLAG_CANCELLATO NUMBER(1) NOT NULL,
FLAG_VALIDO NUMBER(1) NOT NULL
) NOLOGGING;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "STAZIONE_FORESTALE_MAPPING"
IS 'Anagrafica del mapping tra il comune e la stazione forestale. Serve per assegnare automaticamente il cuaa alla stazione forestale tramite il comune';


DROP SEQUENCE auto_inc_staz_for_mapping_seq;

CREATE SEQUENCE auto_inc_staz_for_mapping_seq;


CREATE OR REPLACE TRIGGER auto_inc_staz_for_map_insert
BEFORE INSERT ON STAZIONE_FORESTALE_MAPPING
FOR EACH ROW
BEGIN
 SELECT auto_inc_staz_for_mapping_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------
ANAG_SOTTOINTERVENTO
---------------------------------------------------------

DROP TABLE "ANAG_SOTTOINTERVENTO";

CREATE TABLE "ANAG_SOTTOINTERVENTO" (
"ID" NUMBER NOT NULL PRIMARY KEY,
"MISURA" VARCHAR2(20 CHAR),
"INTERVENTO" VARCHAR2(200 CHAR),
"SOTTOINTERVENTO" VARCHAR2(20 CHAR),
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "ANAG_SOTTOINTERVENTO"
IS 'Anagrafica della gerarchia misura-intervento-sottointervento';


---------------------------------------------------------
DWH_CAMPIONE
---------------------------------------------------------

DROP TABLE "DWH_CAMPIONE";

CREATE TABLE "DWH_CAMPIONE" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_CAMPIONE" NUMBER NOT NULL,
"CUAA" VARCHAR2(20 CHAR) NOT NULL,
"CAMPAGNA" NUMBER NOT NULL,
"ID_DOMANDA" NUMBER NOT NULL,
"NUMERO_DOMANDA" VARCHAR2(20 CHAR) NOT NULL,
"CATEGORIA_CAMPIONE" VARCHAR2(50 CHAR) NOT NULL,
"TIPO_CAMPIONE" VARCHAR2(50 CHAR) NOT NULL,
"FLAG_CAMPIONE" NUMBER NOT NULL,
"DATA_CAMPIONE" TIMESTAMP NOT NULL,
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP ,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "DWH_CAMPIONE"
IS 'Anagrafica delle domande a campione';


DROP SEQUENCE auto_inc_campione_seq;

CREATE SEQUENCE auto_inc_campione_seq;

CREATE OR REPLACE TRIGGER auto_inc_campione_insert
BEFORE INSERT ON DWH_CAMPIONE
FOR EACH ROW
BEGIN
 SELECT auto_inc_campione_seq.nextval
 INTO :new.id
 FROM dual;
END;

---------------------------------------------------------
RUOLI
---------------------------------------------------------

DROP TABLE "RUOLI";

CREATE TABLE "RUOLI" (
"ID" NUMBER NOT NULL PRIMARY KEY, 
"ID_RUOLO" NUMBER NOT NULL,
"TIPO" VARCHAR2(20 CHAR) NOT NULL,
"RUOLO" VARCHAR2(50 CHAR) NOT NULL,
"DATA_CREAZIONE" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
"USER_CREAZIONE" VARCHAR2(20 CHAR) NOT NULL,
"DATA_MODIFICA" TIMESTAMP ,
"USER_MODIFICA" VARCHAR2(20 CHAR),
"DATA_CANCELLAZIONE" TIMESTAMP,
"USER_CANCELLAZIONE" VARCHAR2(20 CHAR),
"FLAG_CANCELLATO" NUMBER(1, 0) NOT NULL,
"FLAG_VALIDO" NUMBER(1, 0) NOT NULL
)  NOLOGGING ;

-- COMMENTO DELLA TABELLA
COMMENT ON TABLE "RUOLI"
IS 'Tabella che rappresenta i ruoli da assegnare ad un gruppo';

DROP SEQUENCE auto_inc_ruoli_seq;

CREATE SEQUENCE auto_inc_ruoli_seq;

CREATE OR REPLACE TRIGGER auto_inc_ruoli_seq
BEFORE INSERT ON RUOLI
FOR EACH ROW
BEGIN
 SELECT auto_inc_ruoli_seq.nextval
 INTO :new.id
 FROM dual;
END;


---------------------------------------------------------

COMMIT;
